FROM node:alpine AS builder

RUN mkdir -p /usr/src/tdlib
WORKDIR /usr/src/tdlib

RUN apk update
RUN apk upgrade
RUN apk add --update make gcc g++ alpine-sdk linux-headers git zlib-dev openssl-dev gperf php cmake ccache
RUN git clone https://github.com/tdlib/td.git
WORKDIR /usr/src/tdlib/td

RUN git describe --abbrev=0 --tags > tag.txt
RUN rm -rf build
RUN mkdir -p /usr/src/tdlib/td/build
WORKDIR /usr/src/tdlib/td/build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr/local ..
RUN cmake --build . --target prepare_cross_compiling
RUN cmake --build . --target install
WORKDIR /usr/src/tdlib
RUN ls -l /usr/local

FROM node:alpine AS release

WORKDIR /usr/local/lib
COPY --from=builder /usr/local/lib/* ./
RUN mkdir -p /usr/local/include/td/
WORKDIR /usr/local/include/td/
COPY --from=builder /usr/local/include/td/* ./
RUN mkdir -p /usr/src/tdlib/td
WORKDIR /usr/src/tdlib/td
COPY --from=builder /usr/src/tdlib/td/tag.txt .

RUN apk add --update make gcc g++ ffmpeg opus python
RUN npm install npm@latest -g
RUN crontab -l -u root | echo "*/15 * * * * find /tmp -type f -delete" | crontab -u root -
