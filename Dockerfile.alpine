FROM node:alpine AS builder

RUN mkdir -p /usr/src/tdlib
WORKDIR /usr/src/tdlib

RUN apk update
RUN apk upgrade
RUN apk add --update make gcc g++ alpine-sdk linux-headers git zlib-dev openssl-dev gperf php cmake ccache
RUN git clone https://github.com/tdlib/td.git
WORKDIR /usr/src/tdlib/td

RUN rm -rf build
RUN mkdir -p /usr/src/tdlib/td/build
WORKDIR /usr/src/tdlib/td/build
RUN cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=/usr/local ..
RUN cmake --build . --target prepare_cross_compiling
RUN cmake --build . --target install
WORKDIR /usr/src/tdlib
RUN ls -l /usr/local

FROM node:alpine AS release

LABEL org.opencontainers.image.source https://github.com/ender-null/polaris-base

WORKDIR /usr/local/lib
COPY --from=builder /usr/local/lib/libtdjson.so ./

RUN apk add --update git tzdata make gcc g++ ffmpeg opus python3 python3-dev py3-pip
RUN npm install npm@latest -g
RUN crontab -l -u root | echo "*/15 * * * * find /tmp -type f -delete" | crontab -u root -
ENV TZ=Europe/Madrid
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
